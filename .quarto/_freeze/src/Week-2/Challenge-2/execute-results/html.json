{
  "hash": "15517a3b8496306208c834d31ea0e927",
  "result": {
    "markdown": "---\ntitle: \"Challenge-2\"\nauthor: \"Wong Zi Xin\"\ndate: \"2023-11-06\"\noutput:\n  pdf_document: default\n  html_document: default\n---\n\n\n\n\n<style>\np.comment {\nbackground-color: #DBDBDB;\npadding: 10px;\nborder: 1px solid black;\nmargin-left: 25px;\nborder-radius: 5px;\nfont-style: italic;\n}\n\n</style>\n\n<br>\n<br>\n<div class=\"alert alert-info\">\n  <strong>Welcome!</strong> Hope you have watched the lecture videos and followed the instructions in code-along. Go through the steps described below, _carefully_. It is totally fine to get stuck - <strong>ASK FOR HELP</strong>; reach out to your friends, TAs, or the discussion forum on Canvas.\n  \n&nbsp;\n\nHere is what you have to do,\n<br>\n<br>\n\n1. <strong>Pair</strong> with a neighbor and work \n\n2. <strong>Download</strong> the `Challenge-2.Rmd` and `playlist_data.csv` files from Canvas\n\n3. <strong>Move</strong> the downloaded files to the folder, \"Week-2\"\n\n4. <strong>Set</strong> it as the working directory \n\n5. <strong>Edit</strong> content wherever indicated \n\n6. <strong>Remember</strong> to set `eval=TRUE` after completing the code to generate the output\n\n7. <strong>Ensure</strong> that `echo=TRUE` so that the code is rendered in the final document\n\n8. <strong>Inform</strong> the tutor/instructor upon completion\n\n9. <strong>Submit</strong> the document on Canvas after they approve\n\n10. <strong>Attendance</strong> will be marked only after submission\n\n11. Once again, <strong>do not hesitate</strong> to reach out to the tutors/instructor, if you are stuck\n</div>\n<br>\n\n# I. Exploring music preferences\n\n### A. Background\n\nImagine that you have been hired as a data analyst by a radio station to analyze music preferences of their DJs. They have provided you with a dataset, `playlist_data.csv`, containing information about DJs, their preferred music genres, song titles, and ratings. \n\nUsing the data-set you are required to complete some tasks that are listed subsequently. All these tasks are based on the concepts taught in the video lectures. The questions may not be entirely covered in the lectures; To complete them, you are encouraged to use Google and the resources therein.\n<br>\n\n### B.Tasks\n\n#### Task-1\n\nIn the lecture, we used two data-sets, `starwars` and `anscombe's quartet` that were readily available with the packages, `tidyverse` and `Tmisc`, respectively. When we have to use custom-made data-sets or the ones like we downloaded from Canvas, we have to import it using the R commands before using them. All the questions below are related to this task.\n<br>\n<br>\n\n**Question 1.1:** What does the term \"CSV\" in `playlist_data.csv` stand for, and why is it a popular format for storing tabular data?\n\n**Solution:** \n<br> The word \"CSV\" stands for \"Comma-Separated Values\". It is popular because each line represents a record and it is easy to read and write for everyone.\n<br>\n**Question 1.2:** load the `tidyverse` package to work with `.csv` files in R.  \n\n**Solution:** \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the necessary package to work with CSV files in R.\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n:::\n\n<br>\n\n**Question 1.3:** Import the data-set, `playlist_data.csv`\n\n**Solution:** \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Import the \"playlist_data.csv\" dataset into R \n\nread_csv(\"playlist_data.csv\") \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 26 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): DJ_Name, Music_Genre, Experience, Location\ndbl (3): Rating, Age, Plays_Per_Week\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 26 × 7\n   DJ_Name Music_Genre Rating Experience     Age Location Plays_Per_Week\n   <chr>   <chr>        <dbl> <chr>        <dbl> <chr>             <dbl>\n 1 DJ A    Pop            4.2 Advanced        28 City X               80\n 2 DJ B    Rock           3.8 Intermediate    24 City Y               60\n 3 DJ C    Electronic     4.5 Advanced        30 City Z              100\n 4 DJ D    Pop            4   Intermediate    22 City X               70\n 5 DJ E    Electronic     4.8 Advanced        27 City Y               90\n 6 DJ F    Rock           3.6 Intermediate    25 City Z               55\n 7 DJ G    Pop            4.3 Advanced        29 City X               85\n 8 DJ H    Electronic     4.1 Intermediate    23 City Y               75\n 9 DJ I    Rock           3.9 Advanced        31 City Z               70\n10 DJ J    Pop            4.4 Intermediate    26 City X               95\n# ℹ 16 more rows\n```\n:::\n:::\n\n<br>\n\n**Question 1.4:** Assign the data-set to a variable, `playlist_data`\n\n**Solution:** \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Assign the variable to a dataset \n\nplaylist_data <- read_csv(\"playlist_data.csv\") \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 26 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): DJ_Name, Music_Genre, Experience, Location\ndbl (3): Rating, Age, Plays_Per_Week\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n:::\n\n\n_From now on, you can use the name of the variable to view the contents of the data-set_\n<br>\n<br>\n\n**Question 1.5:** Get more information about `read_csv()` command and provide a screenshot of the information displayed in the \"Help\" tab of the \"Files\" pane\n\n**Solution:** \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# More information about the R command, complete the code\n\n?read_csv(\"playlist_data.csv\")\n```\n:::\n\n<br>\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::include_graphics(\"Screenshot.png\")\n```\n\n::: {.cell-output-display}\n![More information about read_csv command](Screenshot.png){width=800px height=400px}\n:::\n:::\n\n<br>\n\n**Question 1.6:** What does the `skip` argument in the read_csv() function do?\n\n**Solution:** It is used to specify the number of lines to skip at the beginning of the CSV file before reading in the data. \n<br>\n<br>\n\n**Question 1.7:** Display the contents of the data-set\n\n**Solution:** \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Type the name of the variable, to see what it contains\n playlist_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 26 × 7\n   DJ_Name Music_Genre Rating Experience     Age Location Plays_Per_Week\n   <chr>   <chr>        <dbl> <chr>        <dbl> <chr>             <dbl>\n 1 DJ A    Pop            4.2 Advanced        28 City X               80\n 2 DJ B    Rock           3.8 Intermediate    24 City Y               60\n 3 DJ C    Electronic     4.5 Advanced        30 City Z              100\n 4 DJ D    Pop            4   Intermediate    22 City X               70\n 5 DJ E    Electronic     4.8 Advanced        27 City Y               90\n 6 DJ F    Rock           3.6 Intermediate    25 City Z               55\n 7 DJ G    Pop            4.3 Advanced        29 City X               85\n 8 DJ H    Electronic     4.1 Intermediate    23 City Y               75\n 9 DJ I    Rock           3.9 Advanced        31 City Z               70\n10 DJ J    Pop            4.4 Intermediate    26 City X               95\n# ℹ 16 more rows\n```\n:::\n:::\n\n<br>\n\n**Question 1.8:** Assume you have a CSV file named `sales_data.csv` containing information about sales transactions. How would you use the `read_csv()` function to import this file into R and store it in a variable named `sales_data`?\n\n**Solution:** \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# No output is required for this code\n# Only the list of commands that execute the task mentioned in the question are required\nlibrary(tidyverse)\nread_csv(\"sales_data.csv\")\nsales_data <- read_csv(\"sales_data.csv\")\n```\n:::\n\n<br>\n<br>\n\n#### Task-2\n\nAfter learning to import a data-set, let us explore the contents of the data-set through the following questions\n<br>\n<br>\n\n**Question 2.1:** Display the first few rows of the data-set to get an overview of its structure\n\n**Solution:** \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Type the name of the variable we assigned the data-set to\nhead(playlist_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 7\n  DJ_Name Music_Genre Rating Experience     Age Location Plays_Per_Week\n  <chr>   <chr>        <dbl> <chr>        <dbl> <chr>             <dbl>\n1 DJ A    Pop            4.2 Advanced        28 City X               80\n2 DJ B    Rock           3.8 Intermediate    24 City Y               60\n3 DJ C    Electronic     4.5 Advanced        30 City Z              100\n4 DJ D    Pop            4   Intermediate    22 City X               70\n5 DJ E    Electronic     4.8 Advanced        27 City Y               90\n6 DJ F    Rock           3.6 Intermediate    25 City Z               55\n```\n:::\n:::\n\n<br>\n\n**Question 2.2:** Display all the columns of the variable stacked one below another\n\n**Solution:** \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Stack columns of playlist_data\nglimpse(playlist_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 26\nColumns: 7\n$ DJ_Name        <chr> \"DJ A\", \"DJ B\", \"DJ C\", \"DJ D\", \"DJ E\", \"DJ F\", \"DJ G\",…\n$ Music_Genre    <chr> \"Pop\", \"Rock\", \"Electronic\", \"Pop\", \"Electronic\", \"Rock…\n$ Rating         <dbl> 4.2, 3.8, 4.5, 4.0, 4.8, 3.6, 4.3, 4.1, 3.9, 4.4, 4.6, …\n$ Experience     <chr> \"Advanced\", \"Intermediate\", \"Advanced\", \"Intermediate\",…\n$ Age            <dbl> 28, 24, 30, 22, 27, 25, 29, 23, 31, 26, 32, 28, 29, 25,…\n$ Location       <chr> \"City X\", \"City Y\", \"City Z\", \"City X\", \"City Y\", \"City…\n$ Plays_Per_Week <dbl> 80, 60, 100, 70, 90, 55, 85, 75, 70, 95, 110, 75, 60, 8…\n```\n:::\n:::\n\n<br>\n\n**Question 2.3:** How many columns are there in the dataset?\n\n**Solution:** \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Number of columns\nncol(playlist_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 7\n```\n:::\n:::\n\n<br>\n\n**Question 2.4:** What is the total count of DJs?\n\n**Solution:** \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Number of DJs\nnrow(playlist_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 26\n```\n:::\n:::\n\n<br>\n\n**Question 2.5:** Display all the location of all the DJs\n\n**Solution:** \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Location of DJs\nplaylist_data$Location\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"City X\" \"City Y\" \"City Z\" \"City X\" \"City Y\" \"City Z\" \"City X\" \"City Y\"\n [9] \"City Z\" \"City X\" \"City Y\" \"City Z\" \"City X\" \"City Y\" \"City Z\" \"City X\"\n[17] \"City Y\" \"City Z\" \"City X\" \"City Y\" \"City Z\" \"City X\" \"City Y\" \"City Z\"\n[25] \"City X\" \"City Y\"\n```\n:::\n:::\n\n<br>\n\n**Question 2.6:** Display the age of the DJs\n\n**Solution:** \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Age of DJs\nplaylist_data$Age \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] 28 24 30 22 27 25 29 23 31 26 32 28 29 25 31 26 27 24 29 23 28 24 30 22 27\n[26] 25\n```\n:::\n:::\n\n<br>\n<br>\n\n#### Task-3\n\nLet us plot the data to get more insights about the DJs.\n<br>\n<br>\n\n**Question 3.1:** Create a plot to visualize the relationship between DJs' ages and their ratings.\n\n**Solution:** \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# complete the code to generate the plot\n\nggplot(playlist_data) +\naes(x=Age,y=Rating)\n```\n\n::: {.cell-output-display}\n![](Challenge-2_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n<br>\n\n**Question 3.2:** Label the x-axis as \"Age\" and the y-axis as \"Rating.\"\n\n**Solution:** \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# complete the code to generate the plot\n\nggplot(playlist_data) +\naes(x=Age,y=Rating)\n```\n\n::: {.cell-output-display}\n![](Challenge-2_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n<br>\n\n**Question 3.3:** Represent data using points\n\n**Solution:** \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# complete the code to generate the plot\n\nggplot(playlist_data) +\naes(x=Age,y=Rating) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](Challenge-2_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n<br>\n\n**Question 3.4:** Can you change the points represented by dots/small circles to any other shape of your liking?\n\n**Solution:** \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# complete the code to generate the plot\n\nggplot(playlist_data) +\naes(x=Age,y=Rating) +\n  geom_point(shape=4) # <-- Hint: Use ? to learn more about geom_point and use appropriate values for shape\n```\n\n::: {.cell-output-display}\n![](Challenge-2_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n<br>\n\n**Question 3.5:** Insert a suitable title and briefly provide your insights in the caption\n\n**Solution:** \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# complete the code to generate the plot\n\nggplot(playlist_data) +\naes(x=Age,y=Rating) +\n  geom_point(shape=4) + \n  labs(title=\"Age versus Rating\",caption = \"Source: tidyverse playlist dataset\")\n```\n\n::: {.cell-output-display}\n![](Challenge-2_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n<br>\n\n",
    "supporting": [
      "Challenge-2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}